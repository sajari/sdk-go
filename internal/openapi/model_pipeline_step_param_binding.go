/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PipelineStepParamBinding struct for PipelineStepParamBinding
type PipelineStepParamBinding struct {
	// Bind the step parameter to a pipeline variable.
	Bind *string `json:"bind,omitempty"`
	// Bind the step parameter to a constant value.
	Constant *string `json:"constant,omitempty"`
	// Set a default value for the step parameter.  This allows you to set a default value for the step parameter when it is not bound to a pipeline variable.
	DefaultValue *string `json:"default_value,omitempty"`
	// Set the description of the step parameter.
	Description *string `json:"description,omitempty"`
}

// NewPipelineStepParamBinding instantiates a new PipelineStepParamBinding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineStepParamBinding() *PipelineStepParamBinding {
	this := PipelineStepParamBinding{}
	return &this
}

// NewPipelineStepParamBindingWithDefaults instantiates a new PipelineStepParamBinding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineStepParamBindingWithDefaults() *PipelineStepParamBinding {
	this := PipelineStepParamBinding{}
	return &this
}

// GetBind returns the Bind field value if set, zero value otherwise.
func (o *PipelineStepParamBinding) GetBind() string {
	if o == nil || o.Bind == nil {
		var ret string
		return ret
	}
	return *o.Bind
}

// GetBindOk returns a tuple with the Bind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepParamBinding) GetBindOk() (*string, bool) {
	if o == nil || o.Bind == nil {
		return nil, false
	}
	return o.Bind, true
}

// HasBind returns a boolean if a field has been set.
func (o *PipelineStepParamBinding) HasBind() bool {
	if o != nil && o.Bind != nil {
		return true
	}

	return false
}

// SetBind gets a reference to the given string and assigns it to the Bind field.
func (o *PipelineStepParamBinding) SetBind(v string) {
	o.Bind = &v
}

// GetConstant returns the Constant field value if set, zero value otherwise.
func (o *PipelineStepParamBinding) GetConstant() string {
	if o == nil || o.Constant == nil {
		var ret string
		return ret
	}
	return *o.Constant
}

// GetConstantOk returns a tuple with the Constant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepParamBinding) GetConstantOk() (*string, bool) {
	if o == nil || o.Constant == nil {
		return nil, false
	}
	return o.Constant, true
}

// HasConstant returns a boolean if a field has been set.
func (o *PipelineStepParamBinding) HasConstant() bool {
	if o != nil && o.Constant != nil {
		return true
	}

	return false
}

// SetConstant gets a reference to the given string and assigns it to the Constant field.
func (o *PipelineStepParamBinding) SetConstant(v string) {
	o.Constant = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *PipelineStepParamBinding) GetDefaultValue() string {
	if o == nil || o.DefaultValue == nil {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepParamBinding) GetDefaultValueOk() (*string, bool) {
	if o == nil || o.DefaultValue == nil {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *PipelineStepParamBinding) HasDefaultValue() bool {
	if o != nil && o.DefaultValue != nil {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *PipelineStepParamBinding) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PipelineStepParamBinding) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepParamBinding) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PipelineStepParamBinding) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PipelineStepParamBinding) SetDescription(v string) {
	o.Description = &v
}

func (o PipelineStepParamBinding) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bind != nil {
		toSerialize["bind"] = o.Bind
	}
	if o.Constant != nil {
		toSerialize["constant"] = o.Constant
	}
	if o.DefaultValue != nil {
		toSerialize["default_value"] = o.DefaultValue
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullablePipelineStepParamBinding struct {
	value *PipelineStepParamBinding
	isSet bool
}

func (v NullablePipelineStepParamBinding) Get() *PipelineStepParamBinding {
	return v.value
}

func (v *NullablePipelineStepParamBinding) Set(val *PipelineStepParamBinding) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineStepParamBinding) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineStepParamBinding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineStepParamBinding(val *PipelineStepParamBinding) *NullablePipelineStepParamBinding {
	return &NullablePipelineStepParamBinding{value: val, isSet: true}
}

func (v NullablePipelineStepParamBinding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineStepParamBinding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
