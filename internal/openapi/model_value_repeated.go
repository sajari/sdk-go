/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ValueRepeated struct for ValueRepeated
type ValueRepeated struct {
	Values *[]string `json:"values,omitempty"`
}

// NewValueRepeated instantiates a new ValueRepeated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValueRepeated() *ValueRepeated {
	this := ValueRepeated{}
	return &this
}

// NewValueRepeatedWithDefaults instantiates a new ValueRepeated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValueRepeatedWithDefaults() *ValueRepeated {
	this := ValueRepeated{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ValueRepeated) GetValues() []string {
	if o == nil || o.Values == nil {
		var ret []string
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValueRepeated) GetValuesOk() (*[]string, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ValueRepeated) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *ValueRepeated) SetValues(v []string) {
	o.Values = &v
}

func (o ValueRepeated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableValueRepeated struct {
	value *ValueRepeated
	isSet bool
}

func (v NullableValueRepeated) Get() *ValueRepeated {
	return v.value
}

func (v *NullableValueRepeated) Set(val *ValueRepeated) {
	v.value = val
	v.isSet = true
}

func (v NullableValueRepeated) IsSet() bool {
	return v.isSet
}

func (v *NullableValueRepeated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValueRepeated(val *ValueRepeated) *NullableValueRepeated {
	return &NullableValueRepeated{value: val, isSet: true}
}

func (v NullableValueRepeated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValueRepeated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
