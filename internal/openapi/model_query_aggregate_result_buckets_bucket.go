/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QueryAggregateResultBucketsBucket Bucket is the result of a bucket aggregate.
type QueryAggregateResultBucketsBucket struct {
	// Name of bucket.
	Name *string `json:"name,omitempty"`
	// Number of records in the bucket.
	Count *int32 `json:"count,omitempty"`
}

// NewQueryAggregateResultBucketsBucket instantiates a new QueryAggregateResultBucketsBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryAggregateResultBucketsBucket() *QueryAggregateResultBucketsBucket {
	this := QueryAggregateResultBucketsBucket{}
	return &this
}

// NewQueryAggregateResultBucketsBucketWithDefaults instantiates a new QueryAggregateResultBucketsBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryAggregateResultBucketsBucketWithDefaults() *QueryAggregateResultBucketsBucket {
	this := QueryAggregateResultBucketsBucket{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QueryAggregateResultBucketsBucket) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryAggregateResultBucketsBucket) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QueryAggregateResultBucketsBucket) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QueryAggregateResultBucketsBucket) SetName(v string) {
	o.Name = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *QueryAggregateResultBucketsBucket) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryAggregateResultBucketsBucket) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *QueryAggregateResultBucketsBucket) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *QueryAggregateResultBucketsBucket) SetCount(v int32) {
	o.Count = &v
}

func (o QueryAggregateResultBucketsBucket) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableQueryAggregateResultBucketsBucket struct {
	value *QueryAggregateResultBucketsBucket
	isSet bool
}

func (v NullableQueryAggregateResultBucketsBucket) Get() *QueryAggregateResultBucketsBucket {
	return v.value
}

func (v *NullableQueryAggregateResultBucketsBucket) Set(val *QueryAggregateResultBucketsBucket) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryAggregateResultBucketsBucket) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryAggregateResultBucketsBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryAggregateResultBucketsBucket(val *QueryAggregateResultBucketsBucket) *NullableQueryAggregateResultBucketsBucket {
	return &NullableQueryAggregateResultBucketsBucket{value: val, isSet: true}
}

func (v NullableQueryAggregateResultBucketsBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryAggregateResultBucketsBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
