/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// V4beta1PipelineType  - TYPE_UNSPECIFIED: Pipeline type not specified.  - RECORD: Record pipeline.  - QUERY: Query pipeline.  - RECORD_PIPELINE: Record pipeline. Deprecated: Use RECORD.  - QUERY_PIPELINE: Query pipeline. Deprecated: Use QUERY.
type V4beta1PipelineType string

// List of v4beta1PipelineType
const (
	V4BETA1PIPELINETYPE_TYPE_UNSPECIFIED V4beta1PipelineType = "TYPE_UNSPECIFIED"
	V4BETA1PIPELINETYPE_RECORD           V4beta1PipelineType = "RECORD"
	V4BETA1PIPELINETYPE_QUERY            V4beta1PipelineType = "QUERY"
	V4BETA1PIPELINETYPE_RECORD_PIPELINE  V4beta1PipelineType = "RECORD_PIPELINE"
	V4BETA1PIPELINETYPE_QUERY_PIPELINE   V4beta1PipelineType = "QUERY_PIPELINE"
)

func (v *V4beta1PipelineType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V4beta1PipelineType(value)
	for _, existing := range []V4beta1PipelineType{"TYPE_UNSPECIFIED", "RECORD", "QUERY", "RECORD_PIPELINE", "QUERY_PIPELINE"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V4beta1PipelineType", value)
}

// Ptr returns reference to v4beta1PipelineType value
func (v V4beta1PipelineType) Ptr() *V4beta1PipelineType {
	return &v
}

type NullableV4beta1PipelineType struct {
	value *V4beta1PipelineType
	isSet bool
}

func (v NullableV4beta1PipelineType) Get() *V4beta1PipelineType {
	return v.value
}

func (v *NullableV4beta1PipelineType) Set(val *V4beta1PipelineType) {
	v.value = val
	v.isSet = true
}

func (v NullableV4beta1PipelineType) IsSet() bool {
	return v.isSet
}

func (v *NullableV4beta1PipelineType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV4beta1PipelineType(val *V4beta1PipelineType) *NullableV4beta1PipelineType {
	return &NullableV4beta1PipelineType{value: val, isSet: true}
}

func (v NullableV4beta1PipelineType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV4beta1PipelineType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
