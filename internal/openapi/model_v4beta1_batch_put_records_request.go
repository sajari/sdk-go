/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V4beta1BatchPutRecordsRequest struct for V4beta1BatchPutRecordsRequest
type V4beta1BatchPutRecordsRequest struct {
	Pipeline *V4beta1BatchPutRecordsRequestPipeline `json:"pipeline,omitempty"`
	// A list of records to put.
	Records []map[string]interface{} `json:"records"`
	// The initial values for the variables the pipeline operates on and transforms throughout its steps.
	Variables *map[string]interface{} `json:"variables,omitempty"`
}

// NewV4beta1BatchPutRecordsRequest instantiates a new V4beta1BatchPutRecordsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV4beta1BatchPutRecordsRequest(records []map[string]interface{}) *V4beta1BatchPutRecordsRequest {
	this := V4beta1BatchPutRecordsRequest{}
	this.Records = records
	return &this
}

// NewV4beta1BatchPutRecordsRequestWithDefaults instantiates a new V4beta1BatchPutRecordsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV4beta1BatchPutRecordsRequestWithDefaults() *V4beta1BatchPutRecordsRequest {
	this := V4beta1BatchPutRecordsRequest{}
	return &this
}

// GetPipeline returns the Pipeline field value if set, zero value otherwise.
func (o *V4beta1BatchPutRecordsRequest) GetPipeline() V4beta1BatchPutRecordsRequestPipeline {
	if o == nil || o.Pipeline == nil {
		var ret V4beta1BatchPutRecordsRequestPipeline
		return ret
	}
	return *o.Pipeline
}

// GetPipelineOk returns a tuple with the Pipeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1BatchPutRecordsRequest) GetPipelineOk() (*V4beta1BatchPutRecordsRequestPipeline, bool) {
	if o == nil || o.Pipeline == nil {
		return nil, false
	}
	return o.Pipeline, true
}

// HasPipeline returns a boolean if a field has been set.
func (o *V4beta1BatchPutRecordsRequest) HasPipeline() bool {
	if o != nil && o.Pipeline != nil {
		return true
	}

	return false
}

// SetPipeline gets a reference to the given V4beta1BatchPutRecordsRequestPipeline and assigns it to the Pipeline field.
func (o *V4beta1BatchPutRecordsRequest) SetPipeline(v V4beta1BatchPutRecordsRequestPipeline) {
	o.Pipeline = &v
}

// GetRecords returns the Records field value
func (o *V4beta1BatchPutRecordsRequest) GetRecords() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value
// and a boolean to check if the value has been set.
func (o *V4beta1BatchPutRecordsRequest) GetRecordsOk() (*[]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Records, true
}

// SetRecords sets field value
func (o *V4beta1BatchPutRecordsRequest) SetRecords(v []map[string]interface{}) {
	o.Records = v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *V4beta1BatchPutRecordsRequest) GetVariables() map[string]interface{} {
	if o == nil || o.Variables == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1BatchPutRecordsRequest) GetVariablesOk() (*map[string]interface{}, bool) {
	if o == nil || o.Variables == nil {
		return nil, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *V4beta1BatchPutRecordsRequest) HasVariables() bool {
	if o != nil && o.Variables != nil {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]interface{} and assigns it to the Variables field.
func (o *V4beta1BatchPutRecordsRequest) SetVariables(v map[string]interface{}) {
	o.Variables = &v
}

func (o V4beta1BatchPutRecordsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pipeline != nil {
		toSerialize["pipeline"] = o.Pipeline
	}
	if true {
		toSerialize["records"] = o.Records
	}
	if o.Variables != nil {
		toSerialize["variables"] = o.Variables
	}
	return json.Marshal(toSerialize)
}

type NullableV4beta1BatchPutRecordsRequest struct {
	value *V4beta1BatchPutRecordsRequest
	isSet bool
}

func (v NullableV4beta1BatchPutRecordsRequest) Get() *V4beta1BatchPutRecordsRequest {
	return v.value
}

func (v *NullableV4beta1BatchPutRecordsRequest) Set(val *V4beta1BatchPutRecordsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV4beta1BatchPutRecordsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV4beta1BatchPutRecordsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV4beta1BatchPutRecordsRequest(val *V4beta1BatchPutRecordsRequest) *NullableV4beta1BatchPutRecordsRequest {
	return &NullableV4beta1BatchPutRecordsRequest{value: val, isSet: true}
}

func (v NullableV4beta1BatchPutRecordsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV4beta1BatchPutRecordsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
