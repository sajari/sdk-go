/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V4beta1QueryCollectionResponse struct for V4beta1QueryCollectionResponse
type V4beta1QueryCollectionResponse struct {
	Pipeline *V4beta1QueryCollectionResponsePipeline `json:"pipeline,omitempty"`
	// The modified variables returned by the pipeline after it has finished processing.
	Variables    *map[string]interface{} `json:"variables,omitempty"`
	QueryResults *V2QueryResults         `json:"query_results,omitempty"`
	// Tokens which correspond to the result records.
	Tokens *[]V2Token `json:"tokens,omitempty"`
}

// NewV4beta1QueryCollectionResponse instantiates a new V4beta1QueryCollectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV4beta1QueryCollectionResponse() *V4beta1QueryCollectionResponse {
	this := V4beta1QueryCollectionResponse{}
	return &this
}

// NewV4beta1QueryCollectionResponseWithDefaults instantiates a new V4beta1QueryCollectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV4beta1QueryCollectionResponseWithDefaults() *V4beta1QueryCollectionResponse {
	this := V4beta1QueryCollectionResponse{}
	return &this
}

// GetPipeline returns the Pipeline field value if set, zero value otherwise.
func (o *V4beta1QueryCollectionResponse) GetPipeline() V4beta1QueryCollectionResponsePipeline {
	if o == nil || o.Pipeline == nil {
		var ret V4beta1QueryCollectionResponsePipeline
		return ret
	}
	return *o.Pipeline
}

// GetPipelineOk returns a tuple with the Pipeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1QueryCollectionResponse) GetPipelineOk() (*V4beta1QueryCollectionResponsePipeline, bool) {
	if o == nil || o.Pipeline == nil {
		return nil, false
	}
	return o.Pipeline, true
}

// HasPipeline returns a boolean if a field has been set.
func (o *V4beta1QueryCollectionResponse) HasPipeline() bool {
	if o != nil && o.Pipeline != nil {
		return true
	}

	return false
}

// SetPipeline gets a reference to the given V4beta1QueryCollectionResponsePipeline and assigns it to the Pipeline field.
func (o *V4beta1QueryCollectionResponse) SetPipeline(v V4beta1QueryCollectionResponsePipeline) {
	o.Pipeline = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *V4beta1QueryCollectionResponse) GetVariables() map[string]interface{} {
	if o == nil || o.Variables == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1QueryCollectionResponse) GetVariablesOk() (*map[string]interface{}, bool) {
	if o == nil || o.Variables == nil {
		return nil, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *V4beta1QueryCollectionResponse) HasVariables() bool {
	if o != nil && o.Variables != nil {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]interface{} and assigns it to the Variables field.
func (o *V4beta1QueryCollectionResponse) SetVariables(v map[string]interface{}) {
	o.Variables = &v
}

// GetQueryResults returns the QueryResults field value if set, zero value otherwise.
func (o *V4beta1QueryCollectionResponse) GetQueryResults() V2QueryResults {
	if o == nil || o.QueryResults == nil {
		var ret V2QueryResults
		return ret
	}
	return *o.QueryResults
}

// GetQueryResultsOk returns a tuple with the QueryResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1QueryCollectionResponse) GetQueryResultsOk() (*V2QueryResults, bool) {
	if o == nil || o.QueryResults == nil {
		return nil, false
	}
	return o.QueryResults, true
}

// HasQueryResults returns a boolean if a field has been set.
func (o *V4beta1QueryCollectionResponse) HasQueryResults() bool {
	if o != nil && o.QueryResults != nil {
		return true
	}

	return false
}

// SetQueryResults gets a reference to the given V2QueryResults and assigns it to the QueryResults field.
func (o *V4beta1QueryCollectionResponse) SetQueryResults(v V2QueryResults) {
	o.QueryResults = &v
}

// GetTokens returns the Tokens field value if set, zero value otherwise.
func (o *V4beta1QueryCollectionResponse) GetTokens() []V2Token {
	if o == nil || o.Tokens == nil {
		var ret []V2Token
		return ret
	}
	return *o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1QueryCollectionResponse) GetTokensOk() (*[]V2Token, bool) {
	if o == nil || o.Tokens == nil {
		return nil, false
	}
	return o.Tokens, true
}

// HasTokens returns a boolean if a field has been set.
func (o *V4beta1QueryCollectionResponse) HasTokens() bool {
	if o != nil && o.Tokens != nil {
		return true
	}

	return false
}

// SetTokens gets a reference to the given []V2Token and assigns it to the Tokens field.
func (o *V4beta1QueryCollectionResponse) SetTokens(v []V2Token) {
	o.Tokens = &v
}

func (o V4beta1QueryCollectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pipeline != nil {
		toSerialize["pipeline"] = o.Pipeline
	}
	if o.Variables != nil {
		toSerialize["variables"] = o.Variables
	}
	if o.QueryResults != nil {
		toSerialize["query_results"] = o.QueryResults
	}
	if o.Tokens != nil {
		toSerialize["tokens"] = o.Tokens
	}
	return json.Marshal(toSerialize)
}

type NullableV4beta1QueryCollectionResponse struct {
	value *V4beta1QueryCollectionResponse
	isSet bool
}

func (v NullableV4beta1QueryCollectionResponse) Get() *V4beta1QueryCollectionResponse {
	return v.value
}

func (v *NullableV4beta1QueryCollectionResponse) Set(val *V4beta1QueryCollectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV4beta1QueryCollectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV4beta1QueryCollectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV4beta1QueryCollectionResponse(val *V4beta1QueryCollectionResponse) *NullableV4beta1QueryCollectionResponse {
	return &NullableV4beta1QueryCollectionResponse{value: val, isSet: true}
}

func (v NullableV4beta1QueryCollectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV4beta1QueryCollectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
