/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V4beta1ListSchemaFieldsResponse struct for V4beta1ListSchemaFieldsResponse
type V4beta1ListSchemaFieldsResponse struct {
	// The schema fields.
	SchemaFields *[]V4beta1SchemaField1 `json:"schema_fields,omitempty"`
	// Maximum number of fields to return.
	TotalSize *int32 `json:"total_size,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.  If this field is omitted, there are no subsequent pages.
	NextPageToken *string `json:"next_page_token,omitempty"`
}

// NewV4beta1ListSchemaFieldsResponse instantiates a new V4beta1ListSchemaFieldsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV4beta1ListSchemaFieldsResponse() *V4beta1ListSchemaFieldsResponse {
	this := V4beta1ListSchemaFieldsResponse{}
	return &this
}

// NewV4beta1ListSchemaFieldsResponseWithDefaults instantiates a new V4beta1ListSchemaFieldsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV4beta1ListSchemaFieldsResponseWithDefaults() *V4beta1ListSchemaFieldsResponse {
	this := V4beta1ListSchemaFieldsResponse{}
	return &this
}

// GetSchemaFields returns the SchemaFields field value if set, zero value otherwise.
func (o *V4beta1ListSchemaFieldsResponse) GetSchemaFields() []V4beta1SchemaField1 {
	if o == nil || o.SchemaFields == nil {
		var ret []V4beta1SchemaField1
		return ret
	}
	return *o.SchemaFields
}

// GetSchemaFieldsOk returns a tuple with the SchemaFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1ListSchemaFieldsResponse) GetSchemaFieldsOk() (*[]V4beta1SchemaField1, bool) {
	if o == nil || o.SchemaFields == nil {
		return nil, false
	}
	return o.SchemaFields, true
}

// HasSchemaFields returns a boolean if a field has been set.
func (o *V4beta1ListSchemaFieldsResponse) HasSchemaFields() bool {
	if o != nil && o.SchemaFields != nil {
		return true
	}

	return false
}

// SetSchemaFields gets a reference to the given []V4beta1SchemaField1 and assigns it to the SchemaFields field.
func (o *V4beta1ListSchemaFieldsResponse) SetSchemaFields(v []V4beta1SchemaField1) {
	o.SchemaFields = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *V4beta1ListSchemaFieldsResponse) GetTotalSize() int32 {
	if o == nil || o.TotalSize == nil {
		var ret int32
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1ListSchemaFieldsResponse) GetTotalSizeOk() (*int32, bool) {
	if o == nil || o.TotalSize == nil {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *V4beta1ListSchemaFieldsResponse) HasTotalSize() bool {
	if o != nil && o.TotalSize != nil {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int32 and assigns it to the TotalSize field.
func (o *V4beta1ListSchemaFieldsResponse) SetTotalSize(v int32) {
	o.TotalSize = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *V4beta1ListSchemaFieldsResponse) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1ListSchemaFieldsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *V4beta1ListSchemaFieldsResponse) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *V4beta1ListSchemaFieldsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o V4beta1ListSchemaFieldsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SchemaFields != nil {
		toSerialize["schema_fields"] = o.SchemaFields
	}
	if o.TotalSize != nil {
		toSerialize["total_size"] = o.TotalSize
	}
	if o.NextPageToken != nil {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	return json.Marshal(toSerialize)
}

type NullableV4beta1ListSchemaFieldsResponse struct {
	value *V4beta1ListSchemaFieldsResponse
	isSet bool
}

func (v NullableV4beta1ListSchemaFieldsResponse) Get() *V4beta1ListSchemaFieldsResponse {
	return v.value
}

func (v *NullableV4beta1ListSchemaFieldsResponse) Set(val *V4beta1ListSchemaFieldsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV4beta1ListSchemaFieldsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV4beta1ListSchemaFieldsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV4beta1ListSchemaFieldsResponse(val *V4beta1ListSchemaFieldsResponse) *NullableV4beta1ListSchemaFieldsResponse {
	return &NullableV4beta1ListSchemaFieldsResponse{value: val, isSet: true}
}

func (v NullableV4beta1ListSchemaFieldsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV4beta1ListSchemaFieldsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
