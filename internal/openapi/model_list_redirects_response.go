/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListRedirectsResponse struct for ListRedirectsResponse
type ListRedirectsResponse struct {
	// A token, which can be sent as `page_token` to retrieve the next page.  If this field is omitted, there are no subsequent pages.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The redirects.
	Redirects *[]Redirect `json:"redirects,omitempty"`
}

// NewListRedirectsResponse instantiates a new ListRedirectsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRedirectsResponse() *ListRedirectsResponse {
	this := ListRedirectsResponse{}
	return &this
}

// NewListRedirectsResponseWithDefaults instantiates a new ListRedirectsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRedirectsResponseWithDefaults() *ListRedirectsResponse {
	this := ListRedirectsResponse{}
	return &this
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListRedirectsResponse) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRedirectsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListRedirectsResponse) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListRedirectsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetRedirects returns the Redirects field value if set, zero value otherwise.
func (o *ListRedirectsResponse) GetRedirects() []Redirect {
	if o == nil || o.Redirects == nil {
		var ret []Redirect
		return ret
	}
	return *o.Redirects
}

// GetRedirectsOk returns a tuple with the Redirects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRedirectsResponse) GetRedirectsOk() (*[]Redirect, bool) {
	if o == nil || o.Redirects == nil {
		return nil, false
	}
	return o.Redirects, true
}

// HasRedirects returns a boolean if a field has been set.
func (o *ListRedirectsResponse) HasRedirects() bool {
	if o != nil && o.Redirects != nil {
		return true
	}

	return false
}

// SetRedirects gets a reference to the given []Redirect and assigns it to the Redirects field.
func (o *ListRedirectsResponse) SetRedirects(v []Redirect) {
	o.Redirects = &v
}

func (o ListRedirectsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NextPageToken != nil {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	if o.Redirects != nil {
		toSerialize["redirects"] = o.Redirects
	}
	return json.Marshal(toSerialize)
}

type NullableListRedirectsResponse struct {
	value *ListRedirectsResponse
	isSet bool
}

func (v NullableListRedirectsResponse) Get() *ListRedirectsResponse {
	return v.value
}

func (v *NullableListRedirectsResponse) Set(val *ListRedirectsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListRedirectsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListRedirectsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRedirectsResponse(val *ListRedirectsResponse) *NullableListRedirectsResponse {
	return &NullableListRedirectsResponse{value: val, isSet: true}
}

func (v NullableListRedirectsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRedirectsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
