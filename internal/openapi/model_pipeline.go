/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Pipeline struct for Pipeline
type Pipeline struct {
	// Output only. Creation time of the pipeline.
	CreateTime *time.Time   `json:"create_time,omitempty"`
	Type       PipelineType `json:"type"`
	// The pipeline's name.  Must start with an alphanumeric character followed by one or more alphanumeric, `_`, `-` or `.` characters. Strictly speaking, it must match the regular expression: `^[a-zA-Z0-9][a-zA-Z0-9_\\-\\.]+$`.
	Name string `json:"name"`
	// The pipeline's version.  Must start with an alphanumeric character followed by one or more alphanumeric, `_`, `-` or `.` characters. Strictly speaking, it must match the regular expression: `^[a-zA-Z0-9][a-zA-Z0-9_\\-\\.]+$`.
	Version string `json:"version"`
	// Description of the pipeline.
	Description *string `json:"description,omitempty"`
	// Pre-steps are run before an indexing operation or query request is sent to the search index.
	PreSteps *[]PipelineStep `json:"pre_steps,omitempty"`
	// Post-steps are run after an indexing operation or query request has been sent to the search index.  For indexing operations, the post-steps only run when creating new records. They do not run when updating records.  For querying, the post-steps have access to the result-set. This makes it possible to act on the results before sending them back to the caller.
	PostSteps *[]PipelineStep `json:"post_steps,omitempty"`
	// Output only. Indicates if the pipeline is the collection default pipeline.
	CollectionDefault *bool `json:"collection_default,omitempty"`
	// Output only. Indicates if the pipeline is the default version.
	DefaultVersion *bool `json:"default_version,omitempty"`
}

// NewPipeline instantiates a new Pipeline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipeline(type_ PipelineType, name string, version string) *Pipeline {
	this := Pipeline{}
	this.Type = type_
	this.Name = name
	this.Version = version
	return &this
}

// NewPipelineWithDefaults instantiates a new Pipeline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineWithDefaults() *Pipeline {
	this := Pipeline{}
	var type_ PipelineType = "TYPE_UNSPECIFIED"
	this.Type = type_
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *Pipeline) GetCreateTime() time.Time {
	if o == nil || o.CreateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *Pipeline) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *Pipeline) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetType returns the Type field value
func (o *Pipeline) GetType() PipelineType {
	if o == nil {
		var ret PipelineType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Pipeline) GetTypeOk() (*PipelineType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Pipeline) SetType(v PipelineType) {
	o.Type = v
}

// GetName returns the Name field value
func (o *Pipeline) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Pipeline) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Pipeline) SetName(v string) {
	o.Name = v
}

// GetVersion returns the Version field value
func (o *Pipeline) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *Pipeline) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *Pipeline) SetVersion(v string) {
	o.Version = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Pipeline) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Pipeline) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Pipeline) SetDescription(v string) {
	o.Description = &v
}

// GetPreSteps returns the PreSteps field value if set, zero value otherwise.
func (o *Pipeline) GetPreSteps() []PipelineStep {
	if o == nil || o.PreSteps == nil {
		var ret []PipelineStep
		return ret
	}
	return *o.PreSteps
}

// GetPreStepsOk returns a tuple with the PreSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetPreStepsOk() (*[]PipelineStep, bool) {
	if o == nil || o.PreSteps == nil {
		return nil, false
	}
	return o.PreSteps, true
}

// HasPreSteps returns a boolean if a field has been set.
func (o *Pipeline) HasPreSteps() bool {
	if o != nil && o.PreSteps != nil {
		return true
	}

	return false
}

// SetPreSteps gets a reference to the given []PipelineStep and assigns it to the PreSteps field.
func (o *Pipeline) SetPreSteps(v []PipelineStep) {
	o.PreSteps = &v
}

// GetPostSteps returns the PostSteps field value if set, zero value otherwise.
func (o *Pipeline) GetPostSteps() []PipelineStep {
	if o == nil || o.PostSteps == nil {
		var ret []PipelineStep
		return ret
	}
	return *o.PostSteps
}

// GetPostStepsOk returns a tuple with the PostSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetPostStepsOk() (*[]PipelineStep, bool) {
	if o == nil || o.PostSteps == nil {
		return nil, false
	}
	return o.PostSteps, true
}

// HasPostSteps returns a boolean if a field has been set.
func (o *Pipeline) HasPostSteps() bool {
	if o != nil && o.PostSteps != nil {
		return true
	}

	return false
}

// SetPostSteps gets a reference to the given []PipelineStep and assigns it to the PostSteps field.
func (o *Pipeline) SetPostSteps(v []PipelineStep) {
	o.PostSteps = &v
}

// GetCollectionDefault returns the CollectionDefault field value if set, zero value otherwise.
func (o *Pipeline) GetCollectionDefault() bool {
	if o == nil || o.CollectionDefault == nil {
		var ret bool
		return ret
	}
	return *o.CollectionDefault
}

// GetCollectionDefaultOk returns a tuple with the CollectionDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetCollectionDefaultOk() (*bool, bool) {
	if o == nil || o.CollectionDefault == nil {
		return nil, false
	}
	return o.CollectionDefault, true
}

// HasCollectionDefault returns a boolean if a field has been set.
func (o *Pipeline) HasCollectionDefault() bool {
	if o != nil && o.CollectionDefault != nil {
		return true
	}

	return false
}

// SetCollectionDefault gets a reference to the given bool and assigns it to the CollectionDefault field.
func (o *Pipeline) SetCollectionDefault(v bool) {
	o.CollectionDefault = &v
}

// GetDefaultVersion returns the DefaultVersion field value if set, zero value otherwise.
func (o *Pipeline) GetDefaultVersion() bool {
	if o == nil || o.DefaultVersion == nil {
		var ret bool
		return ret
	}
	return *o.DefaultVersion
}

// GetDefaultVersionOk returns a tuple with the DefaultVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetDefaultVersionOk() (*bool, bool) {
	if o == nil || o.DefaultVersion == nil {
		return nil, false
	}
	return o.DefaultVersion, true
}

// HasDefaultVersion returns a boolean if a field has been set.
func (o *Pipeline) HasDefaultVersion() bool {
	if o != nil && o.DefaultVersion != nil {
		return true
	}

	return false
}

// SetDefaultVersion gets a reference to the given bool and assigns it to the DefaultVersion field.
func (o *Pipeline) SetDefaultVersion(v bool) {
	o.DefaultVersion = &v
}

func (o Pipeline) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateTime != nil {
		toSerialize["create_time"] = o.CreateTime
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.PreSteps != nil {
		toSerialize["pre_steps"] = o.PreSteps
	}
	if o.PostSteps != nil {
		toSerialize["post_steps"] = o.PostSteps
	}
	if o.CollectionDefault != nil {
		toSerialize["collection_default"] = o.CollectionDefault
	}
	if o.DefaultVersion != nil {
		toSerialize["default_version"] = o.DefaultVersion
	}
	return json.Marshal(toSerialize)
}

type NullablePipeline struct {
	value *Pipeline
	isSet bool
}

func (v NullablePipeline) Get() *Pipeline {
	return v.value
}

func (v *NullablePipeline) Set(val *Pipeline) {
	v.value = val
	v.isSet = true
}

func (v NullablePipeline) IsSet() bool {
	return v.isSet
}

func (v *NullablePipeline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipeline(val *Pipeline) *NullablePipeline {
	return &NullablePipeline{value: val, isSet: true}
}

func (v NullablePipeline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipeline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
