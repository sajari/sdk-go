/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListIntegrationsResponse ListIntegrations response.
type ListIntegrationsResponse struct {
	// The integrations.
	Integrations *[]Integration `json:"integrations,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.  If this field is omitted, there are no subsequent pages.
	NextPageToken *string `json:"next_page_token,omitempty"`
}

// NewListIntegrationsResponse instantiates a new ListIntegrationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIntegrationsResponse() *ListIntegrationsResponse {
	this := ListIntegrationsResponse{}
	return &this
}

// NewListIntegrationsResponseWithDefaults instantiates a new ListIntegrationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIntegrationsResponseWithDefaults() *ListIntegrationsResponse {
	this := ListIntegrationsResponse{}
	return &this
}

// GetIntegrations returns the Integrations field value if set, zero value otherwise.
func (o *ListIntegrationsResponse) GetIntegrations() []Integration {
	if o == nil || o.Integrations == nil {
		var ret []Integration
		return ret
	}
	return *o.Integrations
}

// GetIntegrationsOk returns a tuple with the Integrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrationsResponse) GetIntegrationsOk() (*[]Integration, bool) {
	if o == nil || o.Integrations == nil {
		return nil, false
	}
	return o.Integrations, true
}

// HasIntegrations returns a boolean if a field has been set.
func (o *ListIntegrationsResponse) HasIntegrations() bool {
	if o != nil && o.Integrations != nil {
		return true
	}

	return false
}

// SetIntegrations gets a reference to the given []Integration and assigns it to the Integrations field.
func (o *ListIntegrationsResponse) SetIntegrations(v []Integration) {
	o.Integrations = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListIntegrationsResponse) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrationsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListIntegrationsResponse) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListIntegrationsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o ListIntegrationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Integrations != nil {
		toSerialize["integrations"] = o.Integrations
	}
	if o.NextPageToken != nil {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	return json.Marshal(toSerialize)
}

type NullableListIntegrationsResponse struct {
	value *ListIntegrationsResponse
	isSet bool
}

func (v NullableListIntegrationsResponse) Get() *ListIntegrationsResponse {
	return v.value
}

func (v *NullableListIntegrationsResponse) Set(val *ListIntegrationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListIntegrationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListIntegrationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIntegrationsResponse(val *ListIntegrationsResponse) *NullableListIntegrationsResponse {
	return &NullableListIntegrationsResponse{value: val, isSet: true}
}

func (v NullableListIntegrationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIntegrationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
