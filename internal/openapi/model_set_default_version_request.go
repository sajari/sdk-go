/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SetDefaultVersionRequest struct for SetDefaultVersionRequest
type SetDefaultVersionRequest struct {
	// The version to use as a default for this pipeline, e.g. `42`.
	Version string `json:"version"`
}

// NewSetDefaultVersionRequest instantiates a new SetDefaultVersionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetDefaultVersionRequest(version string) *SetDefaultVersionRequest {
	this := SetDefaultVersionRequest{}
	this.Version = version
	return &this
}

// NewSetDefaultVersionRequestWithDefaults instantiates a new SetDefaultVersionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetDefaultVersionRequestWithDefaults() *SetDefaultVersionRequest {
	this := SetDefaultVersionRequest{}
	return &this
}

// GetVersion returns the Version field value
func (o *SetDefaultVersionRequest) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *SetDefaultVersionRequest) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *SetDefaultVersionRequest) SetVersion(v string) {
	o.Version = v
}

func (o SetDefaultVersionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableSetDefaultVersionRequest struct {
	value *SetDefaultVersionRequest
	isSet bool
}

func (v NullableSetDefaultVersionRequest) Get() *SetDefaultVersionRequest {
	return v.value
}

func (v *NullableSetDefaultVersionRequest) Set(val *SetDefaultVersionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetDefaultVersionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetDefaultVersionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetDefaultVersionRequest(val *SetDefaultVersionRequest) *NullableSetDefaultVersionRequest {
	return &NullableSetDefaultVersionRequest{value: val, isSet: true}
}

func (v NullableSetDefaultVersionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetDefaultVersionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
