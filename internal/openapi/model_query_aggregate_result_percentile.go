/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QueryAggregateResultPercentile Percentile contains the data points returned in a percentile aggregate step.
type QueryAggregateResultPercentile struct {
	// The percentile data points.
	Percentiles *[]PercentileDataPoint `json:"percentiles,omitempty"`
	// The cumulative distribution function (CDF) data points.
	Cdf *[]PercentileDataPoint `json:"cdf,omitempty"`
}

// NewQueryAggregateResultPercentile instantiates a new QueryAggregateResultPercentile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryAggregateResultPercentile() *QueryAggregateResultPercentile {
	this := QueryAggregateResultPercentile{}
	return &this
}

// NewQueryAggregateResultPercentileWithDefaults instantiates a new QueryAggregateResultPercentile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryAggregateResultPercentileWithDefaults() *QueryAggregateResultPercentile {
	this := QueryAggregateResultPercentile{}
	return &this
}

// GetPercentiles returns the Percentiles field value if set, zero value otherwise.
func (o *QueryAggregateResultPercentile) GetPercentiles() []PercentileDataPoint {
	if o == nil || o.Percentiles == nil {
		var ret []PercentileDataPoint
		return ret
	}
	return *o.Percentiles
}

// GetPercentilesOk returns a tuple with the Percentiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryAggregateResultPercentile) GetPercentilesOk() (*[]PercentileDataPoint, bool) {
	if o == nil || o.Percentiles == nil {
		return nil, false
	}
	return o.Percentiles, true
}

// HasPercentiles returns a boolean if a field has been set.
func (o *QueryAggregateResultPercentile) HasPercentiles() bool {
	if o != nil && o.Percentiles != nil {
		return true
	}

	return false
}

// SetPercentiles gets a reference to the given []PercentileDataPoint and assigns it to the Percentiles field.
func (o *QueryAggregateResultPercentile) SetPercentiles(v []PercentileDataPoint) {
	o.Percentiles = &v
}

// GetCdf returns the Cdf field value if set, zero value otherwise.
func (o *QueryAggregateResultPercentile) GetCdf() []PercentileDataPoint {
	if o == nil || o.Cdf == nil {
		var ret []PercentileDataPoint
		return ret
	}
	return *o.Cdf
}

// GetCdfOk returns a tuple with the Cdf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryAggregateResultPercentile) GetCdfOk() (*[]PercentileDataPoint, bool) {
	if o == nil || o.Cdf == nil {
		return nil, false
	}
	return o.Cdf, true
}

// HasCdf returns a boolean if a field has been set.
func (o *QueryAggregateResultPercentile) HasCdf() bool {
	if o != nil && o.Cdf != nil {
		return true
	}

	return false
}

// SetCdf gets a reference to the given []PercentileDataPoint and assigns it to the Cdf field.
func (o *QueryAggregateResultPercentile) SetCdf(v []PercentileDataPoint) {
	o.Cdf = &v
}

func (o QueryAggregateResultPercentile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Percentiles != nil {
		toSerialize["percentiles"] = o.Percentiles
	}
	if o.Cdf != nil {
		toSerialize["cdf"] = o.Cdf
	}
	return json.Marshal(toSerialize)
}

type NullableQueryAggregateResultPercentile struct {
	value *QueryAggregateResultPercentile
	isSet bool
}

func (v NullableQueryAggregateResultPercentile) Get() *QueryAggregateResultPercentile {
	return v.value
}

func (v *NullableQueryAggregateResultPercentile) Set(val *QueryAggregateResultPercentile) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryAggregateResultPercentile) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryAggregateResultPercentile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryAggregateResultPercentile(val *QueryAggregateResultPercentile) *NullableQueryAggregateResultPercentile {
	return &NullableQueryAggregateResultPercentile{value: val, isSet: true}
}

func (v NullableQueryAggregateResultPercentile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryAggregateResultPercentile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
