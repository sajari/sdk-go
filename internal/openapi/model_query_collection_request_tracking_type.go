/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// QueryCollectionRequestTrackingType  - TYPE_UNSPECIFIED: The default / unset value. The API defaults to `NONE` tracking.  - NONE: No tracking.  - CLICK: Click tracking.  A click token is be generated for each result. Results which do not receive clicks fall down the rankings, and similarly low-ranked records which receive clicks are moved up the rankings.  - POS_NEG: Pos/neg tracking.  Pos/neg tokens are generated for each result. Each record in the result set can be marked with pos/neg value for the search. This is then fed back into the ranking algorithm to improve future results. Unlike `CLICK`, if no tokens are reported for records then no action is taken.
type QueryCollectionRequestTrackingType string

// List of QueryCollectionRequestTrackingType
const (
	QUERYCOLLECTIONREQUESTTRACKINGTYPE_TYPE_UNSPECIFIED QueryCollectionRequestTrackingType = "TYPE_UNSPECIFIED"
	QUERYCOLLECTIONREQUESTTRACKINGTYPE_NONE             QueryCollectionRequestTrackingType = "NONE"
	QUERYCOLLECTIONREQUESTTRACKINGTYPE_CLICK            QueryCollectionRequestTrackingType = "CLICK"
	QUERYCOLLECTIONREQUESTTRACKINGTYPE_POS_NEG          QueryCollectionRequestTrackingType = "POS_NEG"
)

func (v *QueryCollectionRequestTrackingType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := QueryCollectionRequestTrackingType(value)
	for _, existing := range []QueryCollectionRequestTrackingType{"TYPE_UNSPECIFIED", "NONE", "CLICK", "POS_NEG"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid QueryCollectionRequestTrackingType", value)
}

// Ptr returns reference to QueryCollectionRequestTrackingType value
func (v QueryCollectionRequestTrackingType) Ptr() *QueryCollectionRequestTrackingType {
	return &v
}

type NullableQueryCollectionRequestTrackingType struct {
	value *QueryCollectionRequestTrackingType
	isSet bool
}

func (v NullableQueryCollectionRequestTrackingType) Get() *QueryCollectionRequestTrackingType {
	return v.value
}

func (v *NullableQueryCollectionRequestTrackingType) Set(val *QueryCollectionRequestTrackingType) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryCollectionRequestTrackingType) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryCollectionRequestTrackingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryCollectionRequestTrackingType(val *QueryCollectionRequestTrackingType) *NullableQueryCollectionRequestTrackingType {
	return &NullableQueryCollectionRequestTrackingType{value: val, isSet: true}
}

func (v NullableQueryCollectionRequestTrackingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryCollectionRequestTrackingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
