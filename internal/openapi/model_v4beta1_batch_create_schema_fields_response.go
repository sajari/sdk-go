/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V4beta1BatchCreateSchemaFieldsResponse struct for V4beta1BatchCreateSchemaFieldsResponse
type V4beta1BatchCreateSchemaFieldsResponse struct {
	// Schema fields created.
	Fields *[]V4beta1SchemaField1 `json:"fields,omitempty"`
	// Errors that occurred.
	Errors *[]V4beta1BatchCreateSchemaFieldsResponseError `json:"errors,omitempty"`
}

// NewV4beta1BatchCreateSchemaFieldsResponse instantiates a new V4beta1BatchCreateSchemaFieldsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV4beta1BatchCreateSchemaFieldsResponse() *V4beta1BatchCreateSchemaFieldsResponse {
	this := V4beta1BatchCreateSchemaFieldsResponse{}
	return &this
}

// NewV4beta1BatchCreateSchemaFieldsResponseWithDefaults instantiates a new V4beta1BatchCreateSchemaFieldsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV4beta1BatchCreateSchemaFieldsResponseWithDefaults() *V4beta1BatchCreateSchemaFieldsResponse {
	this := V4beta1BatchCreateSchemaFieldsResponse{}
	return &this
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *V4beta1BatchCreateSchemaFieldsResponse) GetFields() []V4beta1SchemaField1 {
	if o == nil || o.Fields == nil {
		var ret []V4beta1SchemaField1
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1BatchCreateSchemaFieldsResponse) GetFieldsOk() (*[]V4beta1SchemaField1, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *V4beta1BatchCreateSchemaFieldsResponse) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given []V4beta1SchemaField1 and assigns it to the Fields field.
func (o *V4beta1BatchCreateSchemaFieldsResponse) SetFields(v []V4beta1SchemaField1) {
	o.Fields = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *V4beta1BatchCreateSchemaFieldsResponse) GetErrors() []V4beta1BatchCreateSchemaFieldsResponseError {
	if o == nil || o.Errors == nil {
		var ret []V4beta1BatchCreateSchemaFieldsResponseError
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4beta1BatchCreateSchemaFieldsResponse) GetErrorsOk() (*[]V4beta1BatchCreateSchemaFieldsResponseError, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *V4beta1BatchCreateSchemaFieldsResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []V4beta1BatchCreateSchemaFieldsResponseError and assigns it to the Errors field.
func (o *V4beta1BatchCreateSchemaFieldsResponse) SetErrors(v []V4beta1BatchCreateSchemaFieldsResponseError) {
	o.Errors = &v
}

func (o V4beta1BatchCreateSchemaFieldsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableV4beta1BatchCreateSchemaFieldsResponse struct {
	value *V4beta1BatchCreateSchemaFieldsResponse
	isSet bool
}

func (v NullableV4beta1BatchCreateSchemaFieldsResponse) Get() *V4beta1BatchCreateSchemaFieldsResponse {
	return v.value
}

func (v *NullableV4beta1BatchCreateSchemaFieldsResponse) Set(val *V4beta1BatchCreateSchemaFieldsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV4beta1BatchCreateSchemaFieldsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV4beta1BatchCreateSchemaFieldsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV4beta1BatchCreateSchemaFieldsResponse(val *V4beta1BatchCreateSchemaFieldsResponse) *NullableV4beta1BatchCreateSchemaFieldsResponse {
	return &NullableV4beta1BatchCreateSchemaFieldsResponse{value: val, isSet: true}
}

func (v NullableV4beta1BatchCreateSchemaFieldsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV4beta1BatchCreateSchemaFieldsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
