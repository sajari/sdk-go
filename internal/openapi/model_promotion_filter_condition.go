/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PromotionFilterCondition A set of filters of the form `field = 'value'`. Matches a query if the set of filters in the condition matches exactly the set of filters associated with it.
type PromotionFilterCondition struct {
	// A filter of the form `field = 'value'`.
	Filter *[]string `json:"filter,omitempty"`
}

// NewPromotionFilterCondition instantiates a new PromotionFilterCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromotionFilterCondition() *PromotionFilterCondition {
	this := PromotionFilterCondition{}
	return &this
}

// NewPromotionFilterConditionWithDefaults instantiates a new PromotionFilterCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromotionFilterConditionWithDefaults() *PromotionFilterCondition {
	this := PromotionFilterCondition{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *PromotionFilterCondition) GetFilter() []string {
	if o == nil || o.Filter == nil {
		var ret []string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionFilterCondition) GetFilterOk() (*[]string, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *PromotionFilterCondition) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given []string and assigns it to the Filter field.
func (o *PromotionFilterCondition) SetFilter(v []string) {
	o.Filter = &v
}

func (o PromotionFilterCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	return json.Marshal(toSerialize)
}

type NullablePromotionFilterCondition struct {
	value *PromotionFilterCondition
	isSet bool
}

func (v NullablePromotionFilterCondition) Get() *PromotionFilterCondition {
	return v.value
}

func (v *NullablePromotionFilterCondition) Set(val *PromotionFilterCondition) {
	v.value = val
	v.isSet = true
}

func (v NullablePromotionFilterCondition) IsSet() bool {
	return v.isSet
}

func (v *NullablePromotionFilterCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromotionFilterCondition(val *PromotionFilterCondition) *NullablePromotionFilterCondition {
	return &NullablePromotionFilterCondition{value: val, isSet: true}
}

func (v NullablePromotionFilterCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromotionFilterCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
