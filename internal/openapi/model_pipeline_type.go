/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// PipelineType  - TYPE_UNSPECIFIED: Pipeline type not specified.  - RECORD: Record pipeline.  - QUERY: Query pipeline.
type PipelineType string

// List of PipelineType
const (
	PIPELINETYPE_TYPE_UNSPECIFIED PipelineType = "TYPE_UNSPECIFIED"
	PIPELINETYPE_RECORD           PipelineType = "RECORD"
	PIPELINETYPE_QUERY            PipelineType = "QUERY"
)

func (v *PipelineType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PipelineType(value)
	for _, existing := range []PipelineType{"TYPE_UNSPECIFIED", "RECORD", "QUERY"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PipelineType", value)
}

// Ptr returns reference to PipelineType value
func (v PipelineType) Ptr() *PipelineType {
	return &v
}

type NullablePipelineType struct {
	value *PipelineType
	isSet bool
}

func (v NullablePipelineType) Get() *PipelineType {
	return v.value
}

func (v *NullablePipelineType) Set(val *PipelineType) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineType) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineType(val *PipelineType) *NullablePipelineType {
	return &NullablePipelineType{value: val, isSet: true}
}

func (v NullablePipelineType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
