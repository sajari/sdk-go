/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2QueryResult QueryResult is a record as represented in a search result.
type V2QueryResult struct {
	// Meta data in field-value pairs.
	Values *map[string]Enginev2Value `json:"values,omitempty"`
	// Score (normalised) attributed to this record. Combines the index score and feature score.
	Score *float64 `json:"score,omitempty"`
	// Index score.
	IndexScore *float64 `json:"index_score,omitempty"`
}

// NewV2QueryResult instantiates a new V2QueryResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2QueryResult() *V2QueryResult {
	this := V2QueryResult{}
	return &this
}

// NewV2QueryResultWithDefaults instantiates a new V2QueryResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2QueryResultWithDefaults() *V2QueryResult {
	this := V2QueryResult{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *V2QueryResult) GetValues() map[string]Enginev2Value {
	if o == nil || o.Values == nil {
		var ret map[string]Enginev2Value
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2QueryResult) GetValuesOk() (*map[string]Enginev2Value, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *V2QueryResult) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given map[string]Enginev2Value and assigns it to the Values field.
func (o *V2QueryResult) SetValues(v map[string]Enginev2Value) {
	o.Values = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *V2QueryResult) GetScore() float64 {
	if o == nil || o.Score == nil {
		var ret float64
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2QueryResult) GetScoreOk() (*float64, bool) {
	if o == nil || o.Score == nil {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *V2QueryResult) HasScore() bool {
	if o != nil && o.Score != nil {
		return true
	}

	return false
}

// SetScore gets a reference to the given float64 and assigns it to the Score field.
func (o *V2QueryResult) SetScore(v float64) {
	o.Score = &v
}

// GetIndexScore returns the IndexScore field value if set, zero value otherwise.
func (o *V2QueryResult) GetIndexScore() float64 {
	if o == nil || o.IndexScore == nil {
		var ret float64
		return ret
	}
	return *o.IndexScore
}

// GetIndexScoreOk returns a tuple with the IndexScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2QueryResult) GetIndexScoreOk() (*float64, bool) {
	if o == nil || o.IndexScore == nil {
		return nil, false
	}
	return o.IndexScore, true
}

// HasIndexScore returns a boolean if a field has been set.
func (o *V2QueryResult) HasIndexScore() bool {
	if o != nil && o.IndexScore != nil {
		return true
	}

	return false
}

// SetIndexScore gets a reference to the given float64 and assigns it to the IndexScore field.
func (o *V2QueryResult) SetIndexScore(v float64) {
	o.IndexScore = &v
}

func (o V2QueryResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	if o.Score != nil {
		toSerialize["score"] = o.Score
	}
	if o.IndexScore != nil {
		toSerialize["index_score"] = o.IndexScore
	}
	return json.Marshal(toSerialize)
}

type NullableV2QueryResult struct {
	value *V2QueryResult
	isSet bool
}

func (v NullableV2QueryResult) Get() *V2QueryResult {
	return v.value
}

func (v *NullableV2QueryResult) Set(val *V2QueryResult) {
	v.value = val
	v.isSet = true
}

func (v NullableV2QueryResult) IsSet() bool {
	return v.isSet
}

func (v *NullableV2QueryResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2QueryResult(val *V2QueryResult) *NullableV2QueryResult {
	return &NullableV2QueryResult{value: val, isSet: true}
}

func (v NullableV2QueryResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2QueryResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
