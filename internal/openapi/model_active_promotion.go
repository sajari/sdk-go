/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActivePromotion ActivePromotion is a promotion that is active for a given search.
type ActivePromotion struct {
	// The records that are excluded from the result set by the active promotion.
	ActiveExclusions *[]PromotionExclusion `json:"active_exclusions,omitempty"`
	// The pins that belong to the active promotion. Note that the positions in these pins are the positions specified at pin creation time, which is not necessarily the position that a pin ends up in. For example, if a pin is created at position 2, but the query that the pin is active in has zero results, the pinned result actually appears in position 1.
	ActivePins *[]PromotionPin `json:"active_pins,omitempty"`
	// The ID of the active promotion.
	PromotionId *string `json:"promotion_id,omitempty"`
}

// NewActivePromotion instantiates a new ActivePromotion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivePromotion() *ActivePromotion {
	this := ActivePromotion{}
	return &this
}

// NewActivePromotionWithDefaults instantiates a new ActivePromotion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivePromotionWithDefaults() *ActivePromotion {
	this := ActivePromotion{}
	return &this
}

// GetActiveExclusions returns the ActiveExclusions field value if set, zero value otherwise.
func (o *ActivePromotion) GetActiveExclusions() []PromotionExclusion {
	if o == nil || o.ActiveExclusions == nil {
		var ret []PromotionExclusion
		return ret
	}
	return *o.ActiveExclusions
}

// GetActiveExclusionsOk returns a tuple with the ActiveExclusions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivePromotion) GetActiveExclusionsOk() (*[]PromotionExclusion, bool) {
	if o == nil || o.ActiveExclusions == nil {
		return nil, false
	}
	return o.ActiveExclusions, true
}

// HasActiveExclusions returns a boolean if a field has been set.
func (o *ActivePromotion) HasActiveExclusions() bool {
	if o != nil && o.ActiveExclusions != nil {
		return true
	}

	return false
}

// SetActiveExclusions gets a reference to the given []PromotionExclusion and assigns it to the ActiveExclusions field.
func (o *ActivePromotion) SetActiveExclusions(v []PromotionExclusion) {
	o.ActiveExclusions = &v
}

// GetActivePins returns the ActivePins field value if set, zero value otherwise.
func (o *ActivePromotion) GetActivePins() []PromotionPin {
	if o == nil || o.ActivePins == nil {
		var ret []PromotionPin
		return ret
	}
	return *o.ActivePins
}

// GetActivePinsOk returns a tuple with the ActivePins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivePromotion) GetActivePinsOk() (*[]PromotionPin, bool) {
	if o == nil || o.ActivePins == nil {
		return nil, false
	}
	return o.ActivePins, true
}

// HasActivePins returns a boolean if a field has been set.
func (o *ActivePromotion) HasActivePins() bool {
	if o != nil && o.ActivePins != nil {
		return true
	}

	return false
}

// SetActivePins gets a reference to the given []PromotionPin and assigns it to the ActivePins field.
func (o *ActivePromotion) SetActivePins(v []PromotionPin) {
	o.ActivePins = &v
}

// GetPromotionId returns the PromotionId field value if set, zero value otherwise.
func (o *ActivePromotion) GetPromotionId() string {
	if o == nil || o.PromotionId == nil {
		var ret string
		return ret
	}
	return *o.PromotionId
}

// GetPromotionIdOk returns a tuple with the PromotionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivePromotion) GetPromotionIdOk() (*string, bool) {
	if o == nil || o.PromotionId == nil {
		return nil, false
	}
	return o.PromotionId, true
}

// HasPromotionId returns a boolean if a field has been set.
func (o *ActivePromotion) HasPromotionId() bool {
	if o != nil && o.PromotionId != nil {
		return true
	}

	return false
}

// SetPromotionId gets a reference to the given string and assigns it to the PromotionId field.
func (o *ActivePromotion) SetPromotionId(v string) {
	o.PromotionId = &v
}

func (o ActivePromotion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActiveExclusions != nil {
		toSerialize["active_exclusions"] = o.ActiveExclusions
	}
	if o.ActivePins != nil {
		toSerialize["active_pins"] = o.ActivePins
	}
	if o.PromotionId != nil {
		toSerialize["promotion_id"] = o.PromotionId
	}
	return json.Marshal(toSerialize)
}

type NullableActivePromotion struct {
	value *ActivePromotion
	isSet bool
}

func (v NullableActivePromotion) Get() *ActivePromotion {
	return v.value
}

func (v *NullableActivePromotion) Set(val *ActivePromotion) {
	v.value = val
	v.isSet = true
}

func (v NullableActivePromotion) IsSet() bool {
	return v.isSet
}

func (v *NullableActivePromotion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivePromotion(val *ActivePromotion) *NullableActivePromotion {
	return &NullableActivePromotion{value: val, isSet: true}
}

func (v NullableActivePromotion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivePromotion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
