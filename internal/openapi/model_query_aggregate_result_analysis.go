/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QueryAggregateResultAnalysis struct for QueryAggregateResultAnalysis
type QueryAggregateResultAnalysis struct {
	// Coverage is the number of records which have a value set.
	Coverage *int32 `json:"coverage,omitempty"`
	// Cardinality is the number of different values in a field.
	Cardinality *int32 `json:"cardinality,omitempty"`
	// Min length of a repeated field.
	MinLen *int32 `json:"min_len,omitempty"`
	// Max number of values in a repeated field.
	MaxLen *int32 `json:"max_len,omitempty"`
	// Avg number of items in repeated field.
	AvgLen *float32 `json:"avg_len,omitempty"`
}

// NewQueryAggregateResultAnalysis instantiates a new QueryAggregateResultAnalysis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryAggregateResultAnalysis() *QueryAggregateResultAnalysis {
	this := QueryAggregateResultAnalysis{}
	return &this
}

// NewQueryAggregateResultAnalysisWithDefaults instantiates a new QueryAggregateResultAnalysis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryAggregateResultAnalysisWithDefaults() *QueryAggregateResultAnalysis {
	this := QueryAggregateResultAnalysis{}
	return &this
}

// GetCoverage returns the Coverage field value if set, zero value otherwise.
func (o *QueryAggregateResultAnalysis) GetCoverage() int32 {
	if o == nil || o.Coverage == nil {
		var ret int32
		return ret
	}
	return *o.Coverage
}

// GetCoverageOk returns a tuple with the Coverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryAggregateResultAnalysis) GetCoverageOk() (*int32, bool) {
	if o == nil || o.Coverage == nil {
		return nil, false
	}
	return o.Coverage, true
}

// HasCoverage returns a boolean if a field has been set.
func (o *QueryAggregateResultAnalysis) HasCoverage() bool {
	if o != nil && o.Coverage != nil {
		return true
	}

	return false
}

// SetCoverage gets a reference to the given int32 and assigns it to the Coverage field.
func (o *QueryAggregateResultAnalysis) SetCoverage(v int32) {
	o.Coverage = &v
}

// GetCardinality returns the Cardinality field value if set, zero value otherwise.
func (o *QueryAggregateResultAnalysis) GetCardinality() int32 {
	if o == nil || o.Cardinality == nil {
		var ret int32
		return ret
	}
	return *o.Cardinality
}

// GetCardinalityOk returns a tuple with the Cardinality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryAggregateResultAnalysis) GetCardinalityOk() (*int32, bool) {
	if o == nil || o.Cardinality == nil {
		return nil, false
	}
	return o.Cardinality, true
}

// HasCardinality returns a boolean if a field has been set.
func (o *QueryAggregateResultAnalysis) HasCardinality() bool {
	if o != nil && o.Cardinality != nil {
		return true
	}

	return false
}

// SetCardinality gets a reference to the given int32 and assigns it to the Cardinality field.
func (o *QueryAggregateResultAnalysis) SetCardinality(v int32) {
	o.Cardinality = &v
}

// GetMinLen returns the MinLen field value if set, zero value otherwise.
func (o *QueryAggregateResultAnalysis) GetMinLen() int32 {
	if o == nil || o.MinLen == nil {
		var ret int32
		return ret
	}
	return *o.MinLen
}

// GetMinLenOk returns a tuple with the MinLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryAggregateResultAnalysis) GetMinLenOk() (*int32, bool) {
	if o == nil || o.MinLen == nil {
		return nil, false
	}
	return o.MinLen, true
}

// HasMinLen returns a boolean if a field has been set.
func (o *QueryAggregateResultAnalysis) HasMinLen() bool {
	if o != nil && o.MinLen != nil {
		return true
	}

	return false
}

// SetMinLen gets a reference to the given int32 and assigns it to the MinLen field.
func (o *QueryAggregateResultAnalysis) SetMinLen(v int32) {
	o.MinLen = &v
}

// GetMaxLen returns the MaxLen field value if set, zero value otherwise.
func (o *QueryAggregateResultAnalysis) GetMaxLen() int32 {
	if o == nil || o.MaxLen == nil {
		var ret int32
		return ret
	}
	return *o.MaxLen
}

// GetMaxLenOk returns a tuple with the MaxLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryAggregateResultAnalysis) GetMaxLenOk() (*int32, bool) {
	if o == nil || o.MaxLen == nil {
		return nil, false
	}
	return o.MaxLen, true
}

// HasMaxLen returns a boolean if a field has been set.
func (o *QueryAggregateResultAnalysis) HasMaxLen() bool {
	if o != nil && o.MaxLen != nil {
		return true
	}

	return false
}

// SetMaxLen gets a reference to the given int32 and assigns it to the MaxLen field.
func (o *QueryAggregateResultAnalysis) SetMaxLen(v int32) {
	o.MaxLen = &v
}

// GetAvgLen returns the AvgLen field value if set, zero value otherwise.
func (o *QueryAggregateResultAnalysis) GetAvgLen() float32 {
	if o == nil || o.AvgLen == nil {
		var ret float32
		return ret
	}
	return *o.AvgLen
}

// GetAvgLenOk returns a tuple with the AvgLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryAggregateResultAnalysis) GetAvgLenOk() (*float32, bool) {
	if o == nil || o.AvgLen == nil {
		return nil, false
	}
	return o.AvgLen, true
}

// HasAvgLen returns a boolean if a field has been set.
func (o *QueryAggregateResultAnalysis) HasAvgLen() bool {
	if o != nil && o.AvgLen != nil {
		return true
	}

	return false
}

// SetAvgLen gets a reference to the given float32 and assigns it to the AvgLen field.
func (o *QueryAggregateResultAnalysis) SetAvgLen(v float32) {
	o.AvgLen = &v
}

func (o QueryAggregateResultAnalysis) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Coverage != nil {
		toSerialize["coverage"] = o.Coverage
	}
	if o.Cardinality != nil {
		toSerialize["cardinality"] = o.Cardinality
	}
	if o.MinLen != nil {
		toSerialize["min_len"] = o.MinLen
	}
	if o.MaxLen != nil {
		toSerialize["max_len"] = o.MaxLen
	}
	if o.AvgLen != nil {
		toSerialize["avg_len"] = o.AvgLen
	}
	return json.Marshal(toSerialize)
}

type NullableQueryAggregateResultAnalysis struct {
	value *QueryAggregateResultAnalysis
	isSet bool
}

func (v NullableQueryAggregateResultAnalysis) Get() *QueryAggregateResultAnalysis {
	return v.value
}

func (v *NullableQueryAggregateResultAnalysis) Set(val *QueryAggregateResultAnalysis) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryAggregateResultAnalysis) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryAggregateResultAnalysis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryAggregateResultAnalysis(val *QueryAggregateResultAnalysis) *NullableQueryAggregateResultAnalysis {
	return &NullableQueryAggregateResultAnalysis{value: val, isSet: true}
}

func (v NullableQueryAggregateResultAnalysis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryAggregateResultAnalysis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
