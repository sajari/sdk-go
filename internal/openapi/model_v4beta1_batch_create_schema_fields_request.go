/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V4beta1BatchCreateSchemaFieldsRequest struct for V4beta1BatchCreateSchemaFieldsRequest
type V4beta1BatchCreateSchemaFieldsRequest struct {
	// A list of fields to create.  A maximum of 1000 fields can be created in a batch.
	Fields []V4beta1SchemaField1 `json:"fields"`
}

// NewV4beta1BatchCreateSchemaFieldsRequest instantiates a new V4beta1BatchCreateSchemaFieldsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV4beta1BatchCreateSchemaFieldsRequest(fields []V4beta1SchemaField1) *V4beta1BatchCreateSchemaFieldsRequest {
	this := V4beta1BatchCreateSchemaFieldsRequest{}
	this.Fields = fields
	return &this
}

// NewV4beta1BatchCreateSchemaFieldsRequestWithDefaults instantiates a new V4beta1BatchCreateSchemaFieldsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV4beta1BatchCreateSchemaFieldsRequestWithDefaults() *V4beta1BatchCreateSchemaFieldsRequest {
	this := V4beta1BatchCreateSchemaFieldsRequest{}
	return &this
}

// GetFields returns the Fields field value
func (o *V4beta1BatchCreateSchemaFieldsRequest) GetFields() []V4beta1SchemaField1 {
	if o == nil {
		var ret []V4beta1SchemaField1
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *V4beta1BatchCreateSchemaFieldsRequest) GetFieldsOk() (*[]V4beta1SchemaField1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fields, true
}

// SetFields sets field value
func (o *V4beta1BatchCreateSchemaFieldsRequest) SetFields(v []V4beta1SchemaField1) {
	o.Fields = v
}

func (o V4beta1BatchCreateSchemaFieldsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fields"] = o.Fields
	}
	return json.Marshal(toSerialize)
}

type NullableV4beta1BatchCreateSchemaFieldsRequest struct {
	value *V4beta1BatchCreateSchemaFieldsRequest
	isSet bool
}

func (v NullableV4beta1BatchCreateSchemaFieldsRequest) Get() *V4beta1BatchCreateSchemaFieldsRequest {
	return v.value
}

func (v *NullableV4beta1BatchCreateSchemaFieldsRequest) Set(val *V4beta1BatchCreateSchemaFieldsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV4beta1BatchCreateSchemaFieldsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV4beta1BatchCreateSchemaFieldsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV4beta1BatchCreateSchemaFieldsRequest(val *V4beta1BatchCreateSchemaFieldsRequest) *NullableV4beta1BatchCreateSchemaFieldsRequest {
	return &NullableV4beta1BatchCreateSchemaFieldsRequest{value: val, isSet: true}
}

func (v NullableV4beta1BatchCreateSchemaFieldsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV4beta1BatchCreateSchemaFieldsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
