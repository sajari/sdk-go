/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListCollectionsResponse struct for ListCollectionsResponse
type ListCollectionsResponse struct {
	// The collections from the specified account.
	Collections *[]Collection `json:"collections,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.  If this field is omitted, there are no subsequent pages.
	NextPageToken *string `json:"next_page_token,omitempty"`
}

// NewListCollectionsResponse instantiates a new ListCollectionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCollectionsResponse() *ListCollectionsResponse {
	this := ListCollectionsResponse{}
	return &this
}

// NewListCollectionsResponseWithDefaults instantiates a new ListCollectionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCollectionsResponseWithDefaults() *ListCollectionsResponse {
	this := ListCollectionsResponse{}
	return &this
}

// GetCollections returns the Collections field value if set, zero value otherwise.
func (o *ListCollectionsResponse) GetCollections() []Collection {
	if o == nil || o.Collections == nil {
		var ret []Collection
		return ret
	}
	return *o.Collections
}

// GetCollectionsOk returns a tuple with the Collections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCollectionsResponse) GetCollectionsOk() (*[]Collection, bool) {
	if o == nil || o.Collections == nil {
		return nil, false
	}
	return o.Collections, true
}

// HasCollections returns a boolean if a field has been set.
func (o *ListCollectionsResponse) HasCollections() bool {
	if o != nil && o.Collections != nil {
		return true
	}

	return false
}

// SetCollections gets a reference to the given []Collection and assigns it to the Collections field.
func (o *ListCollectionsResponse) SetCollections(v []Collection) {
	o.Collections = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListCollectionsResponse) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCollectionsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListCollectionsResponse) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListCollectionsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o ListCollectionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Collections != nil {
		toSerialize["collections"] = o.Collections
	}
	if o.NextPageToken != nil {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	return json.Marshal(toSerialize)
}

type NullableListCollectionsResponse struct {
	value *ListCollectionsResponse
	isSet bool
}

func (v NullableListCollectionsResponse) Get() *ListCollectionsResponse {
	return v.value
}

func (v *NullableListCollectionsResponse) Set(val *ListCollectionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListCollectionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListCollectionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCollectionsResponse(val *ListCollectionsResponse) *NullableListCollectionsResponse {
	return &NullableListCollectionsResponse{value: val, isSet: true}
}

func (v NullableListCollectionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCollectionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
