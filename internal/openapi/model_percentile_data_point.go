/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PercentileDataPoint struct for PercentileDataPoint
type PercentileDataPoint struct {
	// The input point.
	Point *float64 `json:"point,omitempty"`
	// The corresponding value for the given point.
	Value *float64 `json:"value,omitempty"`
}

// NewPercentileDataPoint instantiates a new PercentileDataPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPercentileDataPoint() *PercentileDataPoint {
	this := PercentileDataPoint{}
	return &this
}

// NewPercentileDataPointWithDefaults instantiates a new PercentileDataPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPercentileDataPointWithDefaults() *PercentileDataPoint {
	this := PercentileDataPoint{}
	return &this
}

// GetPoint returns the Point field value if set, zero value otherwise.
func (o *PercentileDataPoint) GetPoint() float64 {
	if o == nil || o.Point == nil {
		var ret float64
		return ret
	}
	return *o.Point
}

// GetPointOk returns a tuple with the Point field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PercentileDataPoint) GetPointOk() (*float64, bool) {
	if o == nil || o.Point == nil {
		return nil, false
	}
	return o.Point, true
}

// HasPoint returns a boolean if a field has been set.
func (o *PercentileDataPoint) HasPoint() bool {
	if o != nil && o.Point != nil {
		return true
	}

	return false
}

// SetPoint gets a reference to the given float64 and assigns it to the Point field.
func (o *PercentileDataPoint) SetPoint(v float64) {
	o.Point = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *PercentileDataPoint) GetValue() float64 {
	if o == nil || o.Value == nil {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PercentileDataPoint) GetValueOk() (*float64, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PercentileDataPoint) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *PercentileDataPoint) SetValue(v float64) {
	o.Value = &v
}

func (o PercentileDataPoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Point != nil {
		toSerialize["point"] = o.Point
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullablePercentileDataPoint struct {
	value *PercentileDataPoint
	isSet bool
}

func (v NullablePercentileDataPoint) Get() *PercentileDataPoint {
	return v.value
}

func (v *NullablePercentileDataPoint) Set(val *PercentileDataPoint) {
	v.value = val
	v.isSet = true
}

func (v NullablePercentileDataPoint) IsSet() bool {
	return v.isSet
}

func (v *NullablePercentileDataPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePercentileDataPoint(val *PercentileDataPoint) *NullablePercentileDataPoint {
	return &NullablePercentileDataPoint{value: val, isSet: true}
}

func (v NullablePercentileDataPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePercentileDataPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
