/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchCreateSchemaFieldsRequest struct for BatchCreateSchemaFieldsRequest
type BatchCreateSchemaFieldsRequest struct {
	// A list of fields to create.  A maximum of 1000 fields can be created in a batch.
	Fields []SchemaField `json:"fields"`
}

// NewBatchCreateSchemaFieldsRequest instantiates a new BatchCreateSchemaFieldsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchCreateSchemaFieldsRequest(fields []SchemaField) *BatchCreateSchemaFieldsRequest {
	this := BatchCreateSchemaFieldsRequest{}
	this.Fields = fields
	return &this
}

// NewBatchCreateSchemaFieldsRequestWithDefaults instantiates a new BatchCreateSchemaFieldsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchCreateSchemaFieldsRequestWithDefaults() *BatchCreateSchemaFieldsRequest {
	this := BatchCreateSchemaFieldsRequest{}
	return &this
}

// GetFields returns the Fields field value
func (o *BatchCreateSchemaFieldsRequest) GetFields() []SchemaField {
	if o == nil {
		var ret []SchemaField
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *BatchCreateSchemaFieldsRequest) GetFieldsOk() (*[]SchemaField, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fields, true
}

// SetFields sets field value
func (o *BatchCreateSchemaFieldsRequest) SetFields(v []SchemaField) {
	o.Fields = v
}

func (o BatchCreateSchemaFieldsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fields"] = o.Fields
	}
	return json.Marshal(toSerialize)
}

type NullableBatchCreateSchemaFieldsRequest struct {
	value *BatchCreateSchemaFieldsRequest
	isSet bool
}

func (v NullableBatchCreateSchemaFieldsRequest) Get() *BatchCreateSchemaFieldsRequest {
	return v.value
}

func (v *NullableBatchCreateSchemaFieldsRequest) Set(val *BatchCreateSchemaFieldsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchCreateSchemaFieldsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchCreateSchemaFieldsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchCreateSchemaFieldsRequest(val *BatchCreateSchemaFieldsRequest) *NullableBatchCreateSchemaFieldsRequest {
	return &NullableBatchCreateSchemaFieldsRequest{value: val, isSet: true}
}

func (v NullableBatchCreateSchemaFieldsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchCreateSchemaFieldsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
