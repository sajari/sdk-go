/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QueryAggregateResultDate struct for QueryAggregateResultDate
type QueryAggregateResultDate struct {
	Dates *map[string]int32 `json:"dates,omitempty"`
}

// NewQueryAggregateResultDate instantiates a new QueryAggregateResultDate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryAggregateResultDate() *QueryAggregateResultDate {
	this := QueryAggregateResultDate{}
	return &this
}

// NewQueryAggregateResultDateWithDefaults instantiates a new QueryAggregateResultDate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryAggregateResultDateWithDefaults() *QueryAggregateResultDate {
	this := QueryAggregateResultDate{}
	return &this
}

// GetDates returns the Dates field value if set, zero value otherwise.
func (o *QueryAggregateResultDate) GetDates() map[string]int32 {
	if o == nil || o.Dates == nil {
		var ret map[string]int32
		return ret
	}
	return *o.Dates
}

// GetDatesOk returns a tuple with the Dates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryAggregateResultDate) GetDatesOk() (*map[string]int32, bool) {
	if o == nil || o.Dates == nil {
		return nil, false
	}
	return o.Dates, true
}

// HasDates returns a boolean if a field has been set.
func (o *QueryAggregateResultDate) HasDates() bool {
	if o != nil && o.Dates != nil {
		return true
	}

	return false
}

// SetDates gets a reference to the given map[string]int32 and assigns it to the Dates field.
func (o *QueryAggregateResultDate) SetDates(v map[string]int32) {
	o.Dates = &v
}

func (o QueryAggregateResultDate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Dates != nil {
		toSerialize["dates"] = o.Dates
	}
	return json.Marshal(toSerialize)
}

type NullableQueryAggregateResultDate struct {
	value *QueryAggregateResultDate
	isSet bool
}

func (v NullableQueryAggregateResultDate) Get() *QueryAggregateResultDate {
	return v.value
}

func (v *NullableQueryAggregateResultDate) Set(val *QueryAggregateResultDate) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryAggregateResultDate) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryAggregateResultDate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryAggregateResultDate(val *QueryAggregateResultDate) *NullableQueryAggregateResultDate {
	return &NullableQueryAggregateResultDate{value: val, isSet: true}
}

func (v NullableQueryAggregateResultDate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryAggregateResultDate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
