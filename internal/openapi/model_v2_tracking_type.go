/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// V2TrackingType  - NONE: No tracking.  - CLICK: Click tracking.  A click token will be generated for each result.  Results which do not receive clicks will fall down rankings, and similarly low-ranked records which receive clicks will be moved up the rankings.  - POS_NEG: Pos/neg tracking.  Pos/neg tokens will be generated for each result.  Each record in the result set can be marked with pos/neg value for the search.  This is then fed back into the ranking algorithm to improve future results.  Unlike CLICK, if no tokens are reported for records then no action is taken.
type V2TrackingType string

// List of v2TrackingType
const (
	V2TRACKINGTYPE_NONE    V2TrackingType = "NONE"
	V2TRACKINGTYPE_CLICK   V2TrackingType = "CLICK"
	V2TRACKINGTYPE_POS_NEG V2TrackingType = "POS_NEG"
)

func (v *V2TrackingType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V2TrackingType(value)
	for _, existing := range []V2TrackingType{"NONE", "CLICK", "POS_NEG"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V2TrackingType", value)
}

// Ptr returns reference to v2TrackingType value
func (v V2TrackingType) Ptr() *V2TrackingType {
	return &v
}

type NullableV2TrackingType struct {
	value *V2TrackingType
	isSet bool
}

func (v NullableV2TrackingType) Get() *V2TrackingType {
	return v.value
}

func (v *NullableV2TrackingType) Set(val *V2TrackingType) {
	v.value = val
	v.isSet = true
}

func (v NullableV2TrackingType) IsSet() bool {
	return v.isSet
}

func (v *NullableV2TrackingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2TrackingType(val *V2TrackingType) *NullableV2TrackingType {
	return &NullableV2TrackingType{value: val, isSet: true}
}

func (v NullableV2TrackingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2TrackingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
