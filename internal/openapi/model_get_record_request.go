/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetRecordRequest struct for GetRecordRequest
type GetRecordRequest struct {
	Key RecordKey `json:"key"`
}

// NewGetRecordRequest instantiates a new GetRecordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRecordRequest(key RecordKey) *GetRecordRequest {
	this := GetRecordRequest{}
	this.Key = key
	return &this
}

// NewGetRecordRequestWithDefaults instantiates a new GetRecordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRecordRequestWithDefaults() *GetRecordRequest {
	this := GetRecordRequest{}
	return &this
}

// GetKey returns the Key field value
func (o *GetRecordRequest) GetKey() RecordKey {
	if o == nil {
		var ret RecordKey
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *GetRecordRequest) GetKeyOk() (*RecordKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *GetRecordRequest) SetKey(v RecordKey) {
	o.Key = v
}

func (o GetRecordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableGetRecordRequest struct {
	value *GetRecordRequest
	isSet bool
}

func (v NullableGetRecordRequest) Get() *GetRecordRequest {
	return v.value
}

func (v *NullableGetRecordRequest) Set(val *GetRecordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRecordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRecordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRecordRequest(val *GetRecordRequest) *NullableGetRecordRequest {
	return &NullableGetRecordRequest{value: val, isSet: true}
}

func (v NullableGetRecordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRecordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
