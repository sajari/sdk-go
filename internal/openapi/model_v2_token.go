/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4beta1
 * Contact: support@sajari.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2Token Tokens are used to carry ranking information for query results.
type V2Token struct {
	Click  *TokenClick  `json:"click,omitempty"`
	PosNeg *TokenPosNeg `json:"pos_neg,omitempty"`
}

// NewV2Token instantiates a new V2Token object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2Token() *V2Token {
	this := V2Token{}
	return &this
}

// NewV2TokenWithDefaults instantiates a new V2Token object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2TokenWithDefaults() *V2Token {
	this := V2Token{}
	return &this
}

// GetClick returns the Click field value if set, zero value otherwise.
func (o *V2Token) GetClick() TokenClick {
	if o == nil || o.Click == nil {
		var ret TokenClick
		return ret
	}
	return *o.Click
}

// GetClickOk returns a tuple with the Click field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Token) GetClickOk() (*TokenClick, bool) {
	if o == nil || o.Click == nil {
		return nil, false
	}
	return o.Click, true
}

// HasClick returns a boolean if a field has been set.
func (o *V2Token) HasClick() bool {
	if o != nil && o.Click != nil {
		return true
	}

	return false
}

// SetClick gets a reference to the given TokenClick and assigns it to the Click field.
func (o *V2Token) SetClick(v TokenClick) {
	o.Click = &v
}

// GetPosNeg returns the PosNeg field value if set, zero value otherwise.
func (o *V2Token) GetPosNeg() TokenPosNeg {
	if o == nil || o.PosNeg == nil {
		var ret TokenPosNeg
		return ret
	}
	return *o.PosNeg
}

// GetPosNegOk returns a tuple with the PosNeg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Token) GetPosNegOk() (*TokenPosNeg, bool) {
	if o == nil || o.PosNeg == nil {
		return nil, false
	}
	return o.PosNeg, true
}

// HasPosNeg returns a boolean if a field has been set.
func (o *V2Token) HasPosNeg() bool {
	if o != nil && o.PosNeg != nil {
		return true
	}

	return false
}

// SetPosNeg gets a reference to the given TokenPosNeg and assigns it to the PosNeg field.
func (o *V2Token) SetPosNeg(v TokenPosNeg) {
	o.PosNeg = &v
}

func (o V2Token) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Click != nil {
		toSerialize["click"] = o.Click
	}
	if o.PosNeg != nil {
		toSerialize["pos_neg"] = o.PosNeg
	}
	return json.Marshal(toSerialize)
}

type NullableV2Token struct {
	value *V2Token
	isSet bool
}

func (v NullableV2Token) Get() *V2Token {
	return v.value
}

func (v *NullableV2Token) Set(val *V2Token) {
	v.value = val
	v.isSet = true
}

func (v NullableV2Token) IsSet() bool {
	return v.isSet
}

func (v *NullableV2Token) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2Token(val *V2Token) *NullableV2Token {
	return &NullableV2Token{value: val, isSet: true}
}

func (v NullableV2Token) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2Token) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
