/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchCreateSchemaFieldsResponse struct for BatchCreateSchemaFieldsResponse
type BatchCreateSchemaFieldsResponse struct {
	// Errors that occurred.
	Errors *[]BatchCreateSchemaFieldsResponseError `json:"errors,omitempty"`
	// Schema fields created.
	Fields *[]SchemaField `json:"fields,omitempty"`
}

// NewBatchCreateSchemaFieldsResponse instantiates a new BatchCreateSchemaFieldsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchCreateSchemaFieldsResponse() *BatchCreateSchemaFieldsResponse {
	this := BatchCreateSchemaFieldsResponse{}
	return &this
}

// NewBatchCreateSchemaFieldsResponseWithDefaults instantiates a new BatchCreateSchemaFieldsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchCreateSchemaFieldsResponseWithDefaults() *BatchCreateSchemaFieldsResponse {
	this := BatchCreateSchemaFieldsResponse{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *BatchCreateSchemaFieldsResponse) GetErrors() []BatchCreateSchemaFieldsResponseError {
	if o == nil || o.Errors == nil {
		var ret []BatchCreateSchemaFieldsResponseError
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchCreateSchemaFieldsResponse) GetErrorsOk() (*[]BatchCreateSchemaFieldsResponseError, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *BatchCreateSchemaFieldsResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []BatchCreateSchemaFieldsResponseError and assigns it to the Errors field.
func (o *BatchCreateSchemaFieldsResponse) SetErrors(v []BatchCreateSchemaFieldsResponseError) {
	o.Errors = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *BatchCreateSchemaFieldsResponse) GetFields() []SchemaField {
	if o == nil || o.Fields == nil {
		var ret []SchemaField
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchCreateSchemaFieldsResponse) GetFieldsOk() (*[]SchemaField, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *BatchCreateSchemaFieldsResponse) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given []SchemaField and assigns it to the Fields field.
func (o *BatchCreateSchemaFieldsResponse) SetFields(v []SchemaField) {
	o.Fields = &v
}

func (o BatchCreateSchemaFieldsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	return json.Marshal(toSerialize)
}

type NullableBatchCreateSchemaFieldsResponse struct {
	value *BatchCreateSchemaFieldsResponse
	isSet bool
}

func (v NullableBatchCreateSchemaFieldsResponse) Get() *BatchCreateSchemaFieldsResponse {
	return v.value
}

func (v *NullableBatchCreateSchemaFieldsResponse) Set(val *BatchCreateSchemaFieldsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchCreateSchemaFieldsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchCreateSchemaFieldsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchCreateSchemaFieldsResponse(val *BatchCreateSchemaFieldsResponse) *NullableBatchCreateSchemaFieldsResponse {
	return &NullableBatchCreateSchemaFieldsResponse{value: val, isSet: true}
}

func (v NullableBatchCreateSchemaFieldsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchCreateSchemaFieldsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
