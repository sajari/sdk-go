/*
 * Search.io API
 *
 * Search.io is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * API version: v4
 * Contact: support@search.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QueryResultTokenPosNeg PosNeg is a pair of tokens which are used to mark a record as a good/bad result for a request.
type QueryResultTokenPosNeg struct {
	Neg *string `json:"neg,omitempty"`
	Pos *string `json:"pos,omitempty"`
}

// NewQueryResultTokenPosNeg instantiates a new QueryResultTokenPosNeg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryResultTokenPosNeg() *QueryResultTokenPosNeg {
	this := QueryResultTokenPosNeg{}
	return &this
}

// NewQueryResultTokenPosNegWithDefaults instantiates a new QueryResultTokenPosNeg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryResultTokenPosNegWithDefaults() *QueryResultTokenPosNeg {
	this := QueryResultTokenPosNeg{}
	return &this
}

// GetNeg returns the Neg field value if set, zero value otherwise.
func (o *QueryResultTokenPosNeg) GetNeg() string {
	if o == nil || o.Neg == nil {
		var ret string
		return ret
	}
	return *o.Neg
}

// GetNegOk returns a tuple with the Neg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryResultTokenPosNeg) GetNegOk() (*string, bool) {
	if o == nil || o.Neg == nil {
		return nil, false
	}
	return o.Neg, true
}

// HasNeg returns a boolean if a field has been set.
func (o *QueryResultTokenPosNeg) HasNeg() bool {
	if o != nil && o.Neg != nil {
		return true
	}

	return false
}

// SetNeg gets a reference to the given string and assigns it to the Neg field.
func (o *QueryResultTokenPosNeg) SetNeg(v string) {
	o.Neg = &v
}

// GetPos returns the Pos field value if set, zero value otherwise.
func (o *QueryResultTokenPosNeg) GetPos() string {
	if o == nil || o.Pos == nil {
		var ret string
		return ret
	}
	return *o.Pos
}

// GetPosOk returns a tuple with the Pos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryResultTokenPosNeg) GetPosOk() (*string, bool) {
	if o == nil || o.Pos == nil {
		return nil, false
	}
	return o.Pos, true
}

// HasPos returns a boolean if a field has been set.
func (o *QueryResultTokenPosNeg) HasPos() bool {
	if o != nil && o.Pos != nil {
		return true
	}

	return false
}

// SetPos gets a reference to the given string and assigns it to the Pos field.
func (o *QueryResultTokenPosNeg) SetPos(v string) {
	o.Pos = &v
}

func (o QueryResultTokenPosNeg) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Neg != nil {
		toSerialize["neg"] = o.Neg
	}
	if o.Pos != nil {
		toSerialize["pos"] = o.Pos
	}
	return json.Marshal(toSerialize)
}

type NullableQueryResultTokenPosNeg struct {
	value *QueryResultTokenPosNeg
	isSet bool
}

func (v NullableQueryResultTokenPosNeg) Get() *QueryResultTokenPosNeg {
	return v.value
}

func (v *NullableQueryResultTokenPosNeg) Set(val *QueryResultTokenPosNeg) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryResultTokenPosNeg) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryResultTokenPosNeg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryResultTokenPosNeg(val *QueryResultTokenPosNeg) *NullableQueryResultTokenPosNeg {
	return &NullableQueryResultTokenPosNeg{value: val, isSet: true}
}

func (v NullableQueryResultTokenPosNeg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryResultTokenPosNeg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
